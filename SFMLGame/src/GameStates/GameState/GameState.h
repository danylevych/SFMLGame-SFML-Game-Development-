#pragma once


#include "../State/State.h"

#include "../../Scene/World/World.h"
#include "../../Inputs/Player/Player.h"

#include <SFML/Graphics/RenderWindow.hpp>
#include <SFML/Graphics/Sprite.hpp>
#include <SFML/Graphics/Texture.hpp>
#include <SFML/Window/Keyboard.hpp>


///////////////////////////////////////////////
// \brief
//		The class represents the game obj.
// 
///////////////////////////////////////////////
class GameState : public State
{
private:
	World		world;
	Player		player;

public:
	////////////////////////////////////////////////////////////////////
	// \brief 
	//		Creates the instance of the Game scene for the app.
	// 
	////////////////////////////////////////////////////////////////////
	GameState(StateStack& stack, State::Context context);

public: // Overriding methods.
	////////////////////////////////////////////////////////////////////
	// \brief
	//			Overriding drawing for the state of app.
	// 
	////////////////////////////////////////////////////////////////////
	virtual void Draw() override;

	////////////////////////////////////////////////////////////////////
	// \brief
	// 			Overriding updating for the state of app.
	// 
	////////////////////////////////////////////////////////////////////
	virtual bool Update(sf::Time deltaTime) override;


	////////////////////////////////////////////////////////////////////
	// \brief
	// 			Overriding handeling for the state of app.
	// 
	////////////////////////////////////////////////////////////////////
	virtual bool HandleEvent(const sf::Event& event) override;
};

